{
  "for every dot return 0 or 1 \nto change the visibility": "Math.random() < 0.1",
  "use a float between 0 and 1\n to define the size": "Math.random()",
  "parameter `t` is \nthe time in seconds": "Math.sin(t)",
  "param `i` is the index \nof the dot (0..255)": "i / 256",
  "`x` is the column index\n from 1 to 16": "x / 16",
  "`y` is the row\n also from 1 to 16": "y / 16",
  "positive numbers are white,\nnegatives are red": "y - 8.5",
  "use the time\nto animate values": "y - t",
  "multiply the time\nto change the speed": "y - t*4",
  "create patterns using \ndifferent color": "[1, 0, -1][i%3]",
  "skip `Math.` to use methods \nand props like `sin` or `PI`": "sin(t-sqrt((x-8.5)**2+(y-6)**2))",
  "more examples ...": "Math.sin(y/8 + t)",
  "simple triangle": "y - x",
  "quarter triangle": "(y > x) && (16-x < y)",
  "pattern": "i%4 - y%4",
  "grid": "x%4 && y%4",
  "square": "x>4 & y>4 & x<12 & y<12",
  "animated square": "-(x>t & y>t & x<16-t & y<16-t)",
  "mondrian squares": "(y-6) * (x-6)",
  "moving cross": "(y-4*t|0) * (x-8-t|0)",
  "sierpinski": "4 * t & i & x & y",
  "binary clock": "(t*10) & (1<<x) && y==8",
  "random noise": "Math.random() * 2 - 1",
  "smooth noise": "Math.sin(i ** 2)",
  "animated smooth noise": "Math.cos(t + i*x*y)",
  "waves": "Math.sin(x/2)-Math.sin(x-t)-y+6",
  "ripples\nby @thespite": "Math.sin(t-Math.sqrt(x*x+y*y))",
  "bloop bloop bloop\nby @v21": "(x-8)*(y-8) - Math.sin(t) * 64",
  "starfield\nby @P_Malin": "d=y*y%5.9+1,!((x+t*50/d)&15)/d",
  "diagonals": "y == x || -(17-x == y)",
  "wipe": "(x-y) - Math.sin(t) * 16",
  "soft wipe": "(x-y)/24 - Math.sin(t)",
  "disco": "Math.sin(t*5) * Math.tan(t*7)",
  "input is limited \nto 32 characters!": "(x-5)**2+(y-5)**2-99*Math.sin(t)",
  "click here to \ncreate your own": "'HAVE FUN!'"
}